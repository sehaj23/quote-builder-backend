import { Router } from 'express';
import { QuoteController } from '../controllers/QuoteController.js';
import { QuoteService } from '../services/QuoteService.js';
import { QuoteRepository } from '../repositories/QuoteRepository.js';
import { authenticateToken } from '../middleware/auth.js';
const router = Router({ mergeParams: true });
const quoteRepository = new QuoteRepository();
const quoteService = new QuoteService(quoteRepository);
const quoteController = new QuoteController(quoteService);
router.get('/search', authenticateToken, quoteController.searchQuotes.bind(quoteController));
router.get('/', authenticateToken, quoteController.getQuotesByCompany.bind(quoteController));
export const individualQuoteRouter = Router();
individualQuoteRouter.get('/:id', authenticateToken, quoteController.getQuoteById.bind(quoteController));
individualQuoteRouter.post('/', authenticateToken, quoteController.createQuote.bind(quoteController));
individualQuoteRouter.put('/:id', authenticateToken, quoteController.updateQuote.bind(quoteController));
individualQuoteRouter.delete('/:id', authenticateToken, quoteController.deleteQuote.bind(quoteController));
individualQuoteRouter.post('/:id/duplicate', authenticateToken, quoteController.duplicateQuote.bind(quoteController));
individualQuoteRouter.put('/:id/reject', authenticateToken, quoteController.rejectQuote.bind(quoteController));
individualQuoteRouter.patch('/:id/status', authenticateToken, quoteController.updateQuoteStatus.bind(quoteController));
export default router;
//# sourceMappingURL=quoteRoutes.js.map